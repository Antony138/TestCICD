# 这个name，会显示在网站Action tab下左边的位置。是一个workflow name
name: Build a new version
run-name: "MY CUSTOM WORKFLOW RUN NAME"
# 这里利用返回值，用run name来设置名称?
on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]
    
  # 有输入branch的时候，就build输入的branch（要先检查有没有这个branch？还是直接checkout就知道有没有了）；
  # 没有输入的branch，就build main branch
  workflow_dispatch:

  schedule:
    - cron: 00 20 * * THU # Every Thursday 8 PM, release a new build
    # - cron: '*/5 * * * *' # Runs at every 5th minute.. (Must have single quotes: '')

  push:
    branches: [main]

env:
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8
  APP_STORE_CONNECT_API_KEY_KEY_ID: '${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}'
  APP_STORE_CONNECT_API_KEY_ISSUER_ID: '${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}'
  APP_STORE_CONNECT_API_KEY_KEY: '${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}'
  MATCH_GIT_BASIC_AUTHORIZATION: '${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}'
  MATCH_GIT_URL: '${{ secrets.MATCH_GIT_URL }}'
  MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
  DEPLOYGATE_CUSTOM_MESSAGE: '${{ secrets.DEPLOYGATE_CUSTOM_MESSAGE }}'
  BRANCH_NAME_HEAD_REF: ${{ github.head_ref }} 
  BRANCH_NAME_REF_NAME: ${{ github.ref_name }}

  # MATCH_KEYCHAIN_PASSWORD: '${{ secrets.MATCH_KEYCHAIN_PASSWORD }}'
  # SLACK_CDCI_CHANNEL_URL: '${{ secrets.SLACK_CDCI_CHANNEL_URL }}'
jobs:
  build-new-version:
    if: ${{ inputs.branchName == '' }}
    # runs-on: [self-hosted, macOS, ARM64, antony, m1pro]
    # runs-on: [self-hosted, macOS, ARM64, M1, Air]
    # runs-on: [self-hosted, macOS, X64, test, office]
    name: "MY CUSTOM jobs NAME"
    runs-on: [self-hosted, macOS, ARM64, M1, test, office]
    # runs-on: [self-hosted, macOS, ARM64, CompanyMac]
    # env:
    #   LC_ALL: en_US.UTF-8
    #   LANG: en_US.UTF-8
    #   ImageOS: macos1015

    steps:
      - name: whoami
        run: |
          source ~/.zprofile
          source ~/.zshrc
          whoami
          ruby --version
          type -a ruby
          which ruby

      # - name: Setup private token for Mapbox
      #   run: |
      #     cd ~
      #     pwd
      #     touch .netrc
      #     open .netrc
      #     echo -e 'machine api.mapbox.com\nlogin mapbox\npassword ${{ secrets.MAPBOX_PRIVATE_TOKEN }}' > .netrc

      # build main branch or build other branch
      - uses: actions/checkout@v3

      - name: Install bundler
        run: |
          source ~/.zprofile
          source ~/.zshrc
          gem install bundler

      - name: Run bundle install
        run: |
          source ~/.zprofile
          source ~/.zshrc
          bundle install
        # run: bundle install --path vendor/bundle

      # 这里可以利用返回值，把build number返回后，run name应该可以用
      # 好像是用id来标识（获取）这里的返回值
      - name: Buiding!
        run: |
          source ~/.zprofile
          source ~/.zshrc
          bundle exec fastlane build

      # - name: Delete confidential info from CI environment
      #   if: always()
      #   run: |
      #     cd ~
      #     pwd
      #     rm .netrc